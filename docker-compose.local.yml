version: "3.9"

name: afterlife-local
services:
  proxy:
    image: caddy:2
    container_name: afterlife-proxy-local
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      - DOMAIN=${DOMAIN:-localhost}
      - EMAIL=${ACME_EMAIL:-admin@localhost}
    volumes:
      - caddy_data_local:/data
      - caddy_config_local:/config
      - ./Caddyfile.local:/etc/caddy/Caddyfile:ro
    depends_on:
      - frontend
      - backend

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: afterlife-frontend-local
    restart: unless-stopped
    env_file:
      - ./.env.local
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8080/", "||", "exit", "1"]
      interval: 15s
      timeout: 5s
      retries: 10

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: afterlife-backend-local
    restart: unless-stopped
    env_file:
      - ./.env.local
    environment:
      - DATABASE_URL=sqlite:////app/db/users.db
      - CORS_ORIGINS=http://localhost,http://localhost:80,http://localhost:5173,http://localhost:3000
    volumes:
      - app_db_local:/app/db
      - app_data_local:/app/data
      - ./data/personas:/app/data/personas:ro
    ports:
      - "8000:8000"  # Expose backend directly for testing
    healthcheck:
      test: ["CMD", "curl", "-sf", "http://localhost:8000/ping"]
      interval: 15s
      timeout: 5s
      retries: 10

  prometheus:
    image: prom/prometheus:v2.53.0
    container_name: afterlife-prometheus-local
    restart: unless-stopped
    ports:
      - "9090:9090"  # Expose Prometheus directly
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prom_data_local:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.retention.time=7d  # Shorter retention for local testing
      - --web.enable-lifecycle
    depends_on:
      - backend
      - node-exporter
      - cadvisor

  grafana:
    image: grafana/grafana:11.1.4
    container_name: afterlife-grafana-local
    restart: unless-stopped
    ports:
      - "3001:3000"  # Expose Grafana directly
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana_data_local:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus

  node-exporter:
    image: prom/node-exporter:v1.8.1
    container_name: afterlife-node-exporter-local
    restart: unless-stopped
    pid: host
    ports:
      - "9100:9100"  # Expose node-exporter directly
    command:
      - --path.rootfs=/host
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($|/)
    volumes:
      - /:/host:ro,rslave
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    container_name: afterlife-cadvisor-local
    restart: unless-stopped
    privileged: true
    ports:
      - "8081:8080"  # Expose cAdvisor directly
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /cgroup:/cgroup:ro

volumes:
  app_db_local:
  app_data_local:
  caddy_data_local:
  caddy_config_local:
  prom_data_local:
  grafana_data_local: